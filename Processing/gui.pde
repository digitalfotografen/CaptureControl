/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void textfieldCounter_change1(GTextField source, GEvent event) { //_CODE_:textfieldCounter:490752:
  //println("textfield1 - GTextField event occured " + System.currentTimeMillis()%10000000 );
  println("textfield1 - GTextField event occured " + event.toString() + System.currentTimeMillis()%10000000 );
} //_CODE_:textfieldCounter:490752:

public void textfieldDistance_change1(GTextField source, GEvent event) { //_CODE_:textfieldDistance:996815:
  println("textfieldDistance - GTextField event occured " + System.currentTimeMillis()%10000000 );
  if (event==GEvent.GETS_FOCUS){
    pauseUpdate = true;
  }
  if (event==GEvent.LOST_FOCUS){
    setValue("distance", textfieldDistance.getText());
    pauseUpdate = false;
  }
} //_CODE_:textfieldDistance:996815:

public void textfieldSpeed_change1(GTextField source, GEvent event) { //_CODE_:textfieldSpeed:706236:
  println("textfieldSpeed - GTextField event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:textfieldSpeed:706236:

public void textfieldLongitude_change1(GTextField source, GEvent event) { //_CODE_:textfieldLongitude:747491:
  println("textfieldLongitude - GTextField event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:textfieldLongitude:747491:

public void textfieldLatitude_change1(GTextField source, GEvent event) { //_CODE_:textfieldLatitude:946376:
  println("textfieldLatitude - GTextField event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:textfieldLatitude:946376:

public void textareaLog_change1(GTextArea source, GEvent event) { //_CODE_:textareaLog:456334:
  println("textareaLog - GTextArea event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:textareaLog:456334:

public void textfieldPeriod_change1(GTextField source, GEvent event) { //_CODE_:textfieldPeriod:208355:
  println("textfieldPeriod - GTextField event occured " + System.currentTimeMillis()%10000000 );
  if (event==GEvent.GETS_FOCUS){
    pauseUpdate = true;
  }
  if (event==GEvent.LOST_FOCUS){
    setValue("period", textfieldPeriod.getText());
    pauseUpdate = false;
  }
} //_CODE_:textfieldPeriod:208355:

public void textfieldDateTime_change1(GTextField source, GEvent event) { //_CODE_:textfieldDateTime:530960:
  println("textfieldDateTime - GTextField event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:textfieldDateTime:530960:

public void buttonCapture_click1(GButton source, GEvent event) { //_CODE_:buttonCapture:263092:
  println("buttonCapture - GButton event occured " + System.currentTimeMillis()%10000000 );
  capture();
} //_CODE_:buttonCapture:263092:

public void buttonHold_click1(GButton source, GEvent event) { //_CODE_:buttonHold:213226:
  println("buttonHold - GButton event occured " + System.currentTimeMillis()%10000000 );
  hold = !hold;
  if (hold){
    //buttonReverse.setLocalColorScheme(GCScheme.RED_SCHEME);  
    setValue("hold", "1");
  } else {
     //buttonReverse.setLocalColorScheme(GCScheme.GREEN_SCHEME);
     setValue("hold", "0");
  }
} //_CODE_:buttonHold:213226:

public void buttonReverse_click1(GButton source, GEvent event) { //_CODE_:buttonReverse:699849:
  println("buttonReverse - GButton event occured " + System.currentTimeMillis()%10000000 );
  reverse = !reverse;
  if (reverse){
    //buttonReverse.setLocalColorScheme(GCScheme.RED_SCHEME);  
    setValue("reverse", "1");
  } else {
     //buttonReverse.setLocalColorScheme(GCScheme.GREEN_SCHEME);
     setValue("reverse", "0");
  }
} //_CODE_:buttonReverse:699849:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if(frame != null)
    frame.setTitle("Camera control");
  label1 = new GLabel(this, 10, 50, 80, 20);
  label1.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label1.setText("Counter:");
  label1.setTextBold();
  label1.setOpaque(false);
  textfieldCounter = new GTextField(this, 90, 50, 100, 20, G4P.SCROLLBARS_NONE);
  textfieldCounter.setOpaque(true);
  textfieldCounter.addEventHandler(this, "textfieldCounter_change1");
  label2 = new GLabel(this, 200, 50, 80, 20);
  label2.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label2.setText("Distance:");
  label2.setTextBold();
  label2.setOpaque(false);
  textfieldDistance = new GTextField(this, 280, 50, 100, 20, G4P.SCROLLBARS_NONE);
  textfieldDistance.setOpaque(true);
  textfieldDistance.addEventHandler(this, "textfieldDistance_change1");
  label3 = new GLabel(this, 10, 80, 80, 20);
  label3.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label3.setText("Speed:");
  label3.setTextBold();
  label3.setOpaque(false);
  textfieldSpeed = new GTextField(this, 90, 80, 100, 20, G4P.SCROLLBARS_NONE);
  textfieldSpeed.setOpaque(true);
  textfieldSpeed.addEventHandler(this, "textfieldSpeed_change1");
  label4 = new GLabel(this, 10, 110, 80, 20);
  label4.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label4.setText("Longitude:");
  label4.setTextBold();
  label4.setOpaque(false);
  textfieldLongitude = new GTextField(this, 90, 110, 100, 20, G4P.SCROLLBARS_NONE);
  textfieldLongitude.setOpaque(true);
  textfieldLongitude.addEventHandler(this, "textfieldLongitude_change1");
  label5 = new GLabel(this, 200, 110, 80, 20);
  label5.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label5.setText("Latitude:");
  label5.setTextBold();
  label5.setOpaque(false);
  textfieldLatitude = new GTextField(this, 280, 110, 100, 20, G4P.SCROLLBARS_NONE);
  textfieldLatitude.setOpaque(true);
  textfieldLatitude.addEventHandler(this, "textfieldLatitude_change1");
  textareaLog = new GTextArea(this, 10, 170, 460, 140, G4P.SCROLLBARS_VERTICAL_ONLY);
  textareaLog.setOpaque(true);
  textareaLog.addEventHandler(this, "textareaLog_change1");
  label6 = new GLabel(this, 200, 80, 80, 20);
  label6.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label6.setText("Period:");
  label6.setTextBold();
  label6.setOpaque(false);
  textfieldPeriod = new GTextField(this, 280, 80, 100, 20, G4P.SCROLLBARS_NONE);
  textfieldPeriod.setOpaque(true);
  textfieldPeriod.addEventHandler(this, "textfieldPeriod_change1");
  label7 = new GLabel(this, 10, 140, 80, 20);
  label7.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label7.setText("Date time:");
  label7.setTextBold();
  label7.setOpaque(false);
  textfieldDateTime = new GTextField(this, 90, 140, 290, 20, G4P.SCROLLBARS_NONE);
  textfieldDateTime.setOpaque(true);
  textfieldDateTime.addEventHandler(this, "textfieldDateTime_change1");
  buttonCapture = new GButton(this, 10, 10, 80, 30);
  buttonCapture.setText("Capture");
  buttonCapture.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  buttonCapture.addEventHandler(this, "buttonCapture_click1");
  buttonHold = new GButton(this, 100, 10, 80, 30);
  buttonHold.setText("Hold");
  buttonHold.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  buttonHold.addEventHandler(this, "buttonHold_click1");
  buttonReverse = new GButton(this, 190, 10, 80, 30);
  buttonReverse.setText("Reverse");
  buttonReverse.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  buttonReverse.addEventHandler(this, "buttonReverse_click1");
}

// Variable declarations 
// autogenerated do not edit
GLabel label1; 
GTextField textfieldCounter; 
GLabel label2; 
GTextField textfieldDistance; 
GLabel label3; 
GTextField textfieldSpeed; 
GLabel label4; 
GTextField textfieldLongitude; 
GLabel label5; 
GTextField textfieldLatitude; 
GTextArea textareaLog; 
GLabel label6; 
GTextField textfieldPeriod; 
GLabel label7; 
GTextField textfieldDateTime; 
GButton buttonCapture; 
GButton buttonHold; 
GButton buttonReverse; 

